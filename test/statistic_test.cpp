#include "gtest/gtest.h"
#include "statistics.hpp"

using namespace ppx;

class STA_TestCase : public ::testing::Test
{
public:
    STA_TestCase()
    {
        d2_1 = {
            4.3236608, 3.35122338, 3.49222363, 3.69997592, 2.34909379, 2.18767488,
            2.16444712, 3.42335775, 3.12684526, 5.29987833, 2.92278154, 3.78734002,
            4.42159924, 2.87413605, 4.07878205, 3.78256866, 4.79076022, 2.90930839,
            2.61726172, 2.05885, 4.6771387, 4.19422838, 3.45202478, 3.69340157,
            3.19664012, 4.63889042, 2.62521637, 3.62217656, 5.46889539, 3.53423069,
            4.76992267, 4.60783836, 3.42811992, 4.59510029, 2.86375389, 4.15423067,
            5.76076757, 3.7043695, 4.9028766, 2.87812984, 2.32072277, 3.07481847,
            4.12073955, 3.33009106, 3.58941333, 3.81311256, 2.62879508, 3.32717704,
            4.80311367, 4.46290715, 3.27371626, 3.98017632, 5.19831798, 2.25918325,
            2.58106533, 4.64115646, 3.63653241, 4.79635885, 4.29438109, 4.09783039,
            1.23649083, 3.31382716, 4.38057054, 5.56158072, 5.29198396, 4.02055902,
            3.44527608, 5.31117144, 4.19895772, 3.67044897, 3.64422719, 3.09757485,
            5.29702108, 3.2517827, 3.88572179, 1.6041799, 4.3455102, 4.33209092,
            3.76069677, 3.94913431, 2.55490818, 4.00148904, 4.19922533, 3.19609868,
            2.79493504, 2.85257333, 4.51558046, 2.88748332, 4.15717856, 3.21719062,
            3.05412371, 4.8201182, 3.85739444, 3.41214923, 4.87697885, 2.57467735,
            4.72403246, 3.45126226, 4.95347615, 3.08640421};
        d2_2 = {
            -1.42098395, -1.33204635, -2.8580657, -2.19562405, -2.3707501, -0.23669885,
            -0.85638882, -3.21767737, -4.57052057, -2.9399555, -2.2117331, -3.01265573,
            -1.55902518, -0.23236244, -2.20996735, 0.8106878, -1.2004983, -1.71195628,
            -2.278503, -2.75240968, -1.99841232, -0.91895005, -2.1703771, -1.06907065,
            -3.45958206, -2.05024332, -3.63932494, -4.67213955, -1.04179572, -3.77907907,
            -1.82145315, -3.84594605, -2.61303378, -2.40153486, -1.61567927, -0.4107063,
            -2.77427322, -2.874331, 0.46227023, -3.18169647, -3.53009246, -0.77510894,
            -3.11596277, -3.9312921, -1.68218639, -0.62131798, -2.33221182, -2.93372489,
            -3.31757796, -2.14576392, -1.94223681, -3.74269179, 1.33332551, -3.56772704,
            -3.51990906, -1.71581284, -3.24915184, -0.87708048, -1.39255409, -1.22711598,
            -2.72349569, -1.26613809, -3.01723601, -1.89956282, -1.11987124, -2.88416298,
            -0.74773852, -0.85496716, -2.12308703, -1.21017992, -1.56354312, -0.97158979,
            -1.66461298, -0.72439225, -3.15352057, -2.53907694, -1.59750827, -1.57770646,
            -1.23775326, -0.46525053, -3.13243791, -1.82909815, -0.18621321, -3.68267914,
            -4.83941495, -4.05554548, -1.41165984, -3.52446256, -2.98693379, -1.67824542,
            -2.03616993, -2.12928829, -1.77796807, -2.09979684, -1.00371755, -2.66780956,
            -1.3404693, -2.0590144, -1.07913955, -1.72356594};
    }
    std::vector<double> d2_1, d2_2;
};

TEST_F(STA_TestCase, 2DGaussianDist)
{
    MVN<2> dist;
    MVN<2>::samples sa;
    for (size_t i = 0; i < std::min(d2_1.size(), d2_2.size()); i++)
    {
        sa.push_back(MatrixS<2, 1>{d2_1[i], d2_2[i]});
    }

    dist.fit(sa);
    auto mean_err = norm2<2, 1>(dist.mean() - MatrixS<2, 1>{3.9, -2.0});
    auto cov_err = norm2<2, 2>(dist.covariance() - MatrixS<2, 2>{0.9, 0.3, 0.3, 1.4});
    EXPECT_NEAR(mean_err, 0.0, 0.2);
    EXPECT_NEAR(cov_err, 0.0, 0.08);
}