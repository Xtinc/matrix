#include "gtest/gtest.h"
#include "statistics.hpp"

using namespace ppx;

class STA_TestCase : public ::testing::Test
{
public:
    STA_TestCase()
    {
        v2d_1 = {
            4.3236608, 3.35122338, 3.49222363, 3.69997592, 2.34909379, 2.18767488,
            2.16444712, 3.42335775, 3.12684526, 5.29987833, 2.92278154, 3.78734002,
            4.42159924, 2.87413605, 4.07878205, 3.78256866, 4.79076022, 2.90930839,
            2.61726172, 2.05885, 4.6771387, 4.19422838, 3.45202478, 3.69340157,
            3.19664012, 4.63889042, 2.62521637, 3.62217656, 5.46889539, 3.53423069,
            4.76992267, 4.60783836, 3.42811992, 4.59510029, 2.86375389, 4.15423067,
            5.76076757, 3.7043695, 4.9028766, 2.87812984, 2.32072277, 3.07481847,
            4.12073955, 3.33009106, 3.58941333, 3.81311256, 2.62879508, 3.32717704,
            4.80311367, 4.46290715, 3.27371626, 3.98017632, 5.19831798, 2.25918325,
            2.58106533, 4.64115646, 3.63653241, 4.79635885, 4.29438109, 4.09783039,
            1.23649083, 3.31382716, 4.38057054, 5.56158072, 5.29198396, 4.02055902,
            3.44527608, 5.31117144, 4.19895772, 3.67044897, 3.64422719, 3.09757485,
            5.29702108, 3.2517827, 3.88572179, 1.6041799, 4.3455102, 4.33209092,
            3.76069677, 3.94913431, 2.55490818, 4.00148904, 4.19922533, 3.19609868,
            2.79493504, 2.85257333, 4.51558046, 2.88748332, 4.15717856, 3.21719062,
            3.05412371, 4.8201182, 3.85739444, 3.41214923, 4.87697885, 2.57467735,
            4.72403246, 3.45126226, 4.95347615, 3.08640421};
        v2d_2 = {
            -1.42098395, -1.33204635, -2.8580657, -2.19562405, -2.3707501, -0.23669885,
            -0.85638882, -3.21767737, -4.57052057, -2.9399555, -2.2117331, -3.01265573,
            -1.55902518, -0.23236244, -2.20996735, 0.8106878, -1.2004983, -1.71195628,
            -2.278503, -2.75240968, -1.99841232, -0.91895005, -2.1703771, -1.06907065,
            -3.45958206, -2.05024332, -3.63932494, -4.67213955, -1.04179572, -3.77907907,
            -1.82145315, -3.84594605, -2.61303378, -2.40153486, -1.61567927, -0.4107063,
            -2.77427322, -2.874331, 0.46227023, -3.18169647, -3.53009246, -0.77510894,
            -3.11596277, -3.9312921, -1.68218639, -0.62131798, -2.33221182, -2.93372489,
            -3.31757796, -2.14576392, -1.94223681, -3.74269179, 1.33332551, -3.56772704,
            -3.51990906, -1.71581284, -3.24915184, -0.87708048, -1.39255409, -1.22711598,
            -2.72349569, -1.26613809, -3.01723601, -1.89956282, -1.11987124, -2.88416298,
            -0.74773852, -0.85496716, -2.12308703, -1.21017992, -1.56354312, -0.97158979,
            -1.66461298, -0.72439225, -3.15352057, -2.53907694, -1.59750827, -1.57770646,
            -1.23775326, -0.46525053, -3.13243791, -1.82909815, -0.18621321, -3.68267914,
            -4.83941495, -4.05554548, -1.41165984, -3.52446256, -2.98693379, -1.67824542,
            -2.03616993, -2.12928829, -1.77796807, -2.09979684, -1.00371755, -2.66780956,
            -1.3404693, -2.0590144, -1.07913955, -1.72356594};

        gmr_1 = {
            0., 0.06346652, 0.12693304, 0.19039955, 0.25386607, 0.31733259,
            0.38079911, 0.44426563, 0.50773215, 0.57119866, 0.63466518, 0.6981317,
            0.76159822, 0.82506474, 0.88853126, 0.95199777, 1.01546429, 1.07893081,
            1.14239733, 1.20586385, 1.26933037, 1.33279688, 1.3962634, 1.45972992,
            1.52319644, 1.58666296, 1.65012947, 1.71359599, 1.77706251, 1.84052903,
            1.90399555, 1.96746207, 2.03092858, 2.0943951, 2.15786162, 2.22132814,
            2.28479466, 2.34826118, 2.41172769, 2.47519421, 2.53866073, 2.60212725,
            2.66559377, 2.72906028, 2.7925268, 2.85599332, 2.91945984, 2.98292636,
            3.04639288, 3.10985939, 3.17332591, 3.23679243, 3.30025895, 3.36372547,
            3.42719199, 3.4906585, 3.55412502, 3.61759154, 3.68105806, 3.74452458,
            3.8079911, 3.87145761, 3.93492413, 3.99839065, 4.06185717, 4.12532369,
            4.1887902, 4.25225672, 4.31572324, 4.37918976, 4.44265628, 4.5061228,
            4.56958931, 4.63305583, 4.69652235, 4.75998887, 4.82345539, 4.88692191,
            4.95038842, 5.01385494, 5.07732146, 5.14078798, 5.2042545, 5.26772102,
            5.33118753, 5.39465405, 5.45812057, 5.52158709, 5.58505361, 5.64852012,
            5.71198664, 5.77545316, 5.83891968, 5.9023862, 5.96585272, 6.02931923,
            6.09278575, 6.15625227, 6.21971879, 6.28318531};
        gmr_2 = {
            0.01440436, 0.20885127, 0.20269623, 0.20141875, 0.29553431, 0.34540088,
            0.52107036, 0.40927909, 0.51750351, 0.45523124, 0.33760895, 0.70814947,
            0.77652263, 0.66037521, 1.00312193, 0.66913938, 0.85430128, 0.86273498,
            1.06290992, 1.08108374, 0.97039698, 1.00962782, 0.89602918, 0.79575882,
            0.96407612, 1.01550902, 1.11988384, 1.11005943, 0.94006976, 0.93361188,
            0.84014552, 0.7803525, 0.72536676, 1.06110294, 0.78160464, 0.75195441,
            0.63047004, 0.79044321, 0.50537922, 0.59688496, 0.47751321, 0.55236764,
            0.40714601, 0.28286732, 0.33920192, 0.32456574, 0.22696226, 0.18824859,
            0.03162383, -0.00454618, -0.09897398, -0.13101136, -0.23931602, -0.39293879,
            -0.26398994, -0.38219824, -0.56395037, -0.4119483, -0.60440723, -0.56186532,
            -0.54524993, -0.65387071, -0.5987541, -0.87923216, -0.75552768, -0.90105086,
            -0.95310512, -0.95387874, -0.95350955, -0.93938428, -1.08035714, -0.8887198,
            -0.9432552, -1.15047914, -0.85104891, -0.80927842, -0.87596051, -1.00280024,
            -1.07888683, -0.84945707, -0.97446555, -0.78738749, -0.86062587, -0.75206153,
            -0.77893931, -0.70548915, -0.73354171, -0.51149196, -0.6300964, -0.55270899,
            -0.35232575, -0.62097264, -0.55684341, -0.27472278, -0.42934579, -0.05678587,
            -0.23061314, -0.20133793, 0.12887028, 0.14805148};
    }
    std::vector<double> v2d_1, v2d_2;
    std::vector<double> gmr_1, gmr_2;
};

TEST_F(STA_TestCase, 2DGaussianDist)
{
    MVN<2> dist;
    MVN<2>::samples sa;
    for (size_t i = 0; i < std::min(v2d_1.size(), v2d_2.size()); i++)
    {
        sa.push_back(MatrixS<2, 1>{v2d_1[i], v2d_2[i]});
    }

    dist.fit(sa);
    auto mean_err = norm2<2, 1>(dist.mean() - MatrixS<2, 1>{3.9, -2.0});
    auto cov_err = norm2<2, 2>(dist.covariance() - MatrixS<2, 2>{0.9, 0.3, 0.3, 1.4});
    EXPECT_NEAR(mean_err, 0.0, 0.2);
    EXPECT_NEAR(cov_err, 0.0, 0.08);
}

TEST_F(STA_TestCase, GMR_2D)
{
    GMM<2, 3> gmm;
    GMM<2, 3>::samples sa;
    std::vector<MatrixS<1, 1>> knowns;
    for (size_t i = 0; i < std::min(gmr_1.size(), gmr_2.size()); i++)
    {
        sa.push_back(MatrixS<2, 1>{gmr_1[i], gmr_2[i]});
        knowns.push_back(MatrixS<1, 1>{gmr_1[i]});
    }

    gmm.setcomp(0, MVN<2>({1, 1}, {1, 0, 0, 1}), 0.3);
    gmm.setcomp(1, MVN<2>({2.5, 0.0}, {1, 0, 0, 1}), 0.4);
    gmm.setcomp(2, MVN<2>({5.5, -0.5}, {1, 0, 0, 1}), 0.3);

    gmm.fit(sa);
    std::cout << gmm << std::endl;
    auto pred = gmm.predict(knowns, {0});
    for (size_t i = 0; i < pred.size(); i++)
    {
        std::cout << gmr_1[i] << " " << pred[i][0] << "\n";
    }
}